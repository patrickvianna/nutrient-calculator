// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nutrienteCalculator.App.Data.Context;

namespace NutrientCalculator.App.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200815002156_Food-Nutrient")]
    partial class FoodNutrient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("nutrienteCalculator.App.Entities.Models.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("nutrienteCalculator.App.Entities.Models.FoodNutrient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("FoodId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Nutrient")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.ToTable("FoodNutrients");
                });

            modelBuilder.Entity("nutrienteCalculator.App.Entities.Models.FoodNutrient", b =>
                {
                    b.HasOne("nutrienteCalculator.App.Entities.Models.Food", null)
                        .WithMany("Nutrients")
                        .HasForeignKey("FoodId");
                });
#pragma warning restore 612, 618
        }
    }
}
